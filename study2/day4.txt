사용자 정의 모듈

사용자(개발자)가 직접 만들어 코드를 관리할 수 있도록 작성하는 모듈입니다.
사용자 정의 모듈 만드는법
 
1. 첨부하게되면 그냥 사용하게되는 방법
module.exports = () => {
	모듈 내의 코드
	....
	....
	
}

2. 얘는 별도의 파일로 만들어놓고 쓰고싶을 때 변수를 불러 쓰는 방법
 모듈내의 코드
 ....
....
.....
module.export = 변수;


JSON
JSON은 JavaScript Object Notation의 약자입니다.
데이터를 교환하고 저장하기 위해 만들어진 텍스트 기반의 데이터 교환 표준입니다.

{
	"name":"김사과",
	"gender":"여자",
	"age":20,
	//숫자는 ""안씀
	"job":"학생"	
	"height":160.5,
	"hobby":[
		"드라이브",
		"쇼핑",
		"영화감상",
	]
	"dog":null
}

배열
{
"student":[{"name":"반하나","gender":"여자"},{"name":"반하나","gender":"여자"},
{"name":"반하나","gender":"여자"}]
}


JSON문법 검증
https://jsonlint.com/
{
"apple" : {
    "name":"김사과",
    "password":"1111",
    "gender":"여자"
},
"banana":{
    "name":"바나나",
    "password":"1111",
    "gender":"여자"
},
"orange":{
    "name":"오렌지",
    "password":"1111",
    "gender":"남자"
},
"melon":{
    "name":"이메론",
    "password":"2222",
    "gender":"남자"
    }
}


cookie-parser 모듈
요청된 쿠키를 쉽게 사용할 수 있도록 도와주는 모듈입니다. express(req,res) 객체에 cookie를 사용할 수 있도록
기능을 부여합니다.

cookieParser()	: 일반쿠키를 사용하는 경우
cookieParser('암호화하기위한 문자') // 암호화된 쿠키를 사용하는 경우

쿠키 설정하기
res.cookie('키','값',{
	쿠키 생성 옵션
});
* 쿠키 생성 옵션
maxAge : 만료시간을 밀리초 단위로 설정합니다.
expires : 만료 시간을 GMT 시간으로 설정합니다.
path : cookie의 경로를 설정합니다. 기본 설정은 "/" 입니다.

쿠키 조회하기
req.cookies.[cookie 키]
이러면 쿠키에 해당하는 값을 얻어내기 가능
암호화한 쿠키가있다면
req.signedCookies.[cookie 키]//암호화된 쿠키를 얻어낼 수 있음

쿠키 삭제방법
res.clearCookie('키',{path: '경로'})



문제.

get : /login
아이디 : [ 	]
비밀번호 : [	]
	[로그인버튼]

action을 /loginOk로 잡도록하고 post방식으로 호출되게 만든다.
post : /loginOk

*아이디 : admin
*비밀번호: 1234

계정이 맞을 경우 get : welcom.html  get방식으로 저 홈피에보내고 로그인성공! 띄워주고(/logout)로 돌아갈수있도록 링크
계정이 틀릴경우 get:fail.html -> 로그인 실패! 라고 띄워주면됨 (/login)으로 돌아갈수있도록 링크
